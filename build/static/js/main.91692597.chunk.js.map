{"version":3,"sources":["static/menuIcon.png","static/coin.png","static/monalisa.jpg","static/dance.jpg","static/sunflowers.jpg","components/appbar.js","components/popper.js","serverfuncs.js","components/table.js","components/tiledata.js","components/homepage.js","pages/index.js","pages/table.js","pages/error.js","pages/login.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","useStyles","typography","padding","SimplePopper","props","classes","React","useState","anchorEl","setAnchorEl","open","Boolean","id","undefined","Button","aria-describedby","onClick","event","currentTarget","Popper","transition","TransitionProps","Fade","timeout","Paper","style","width","Typography","className","text","tradeRequest","f","o","next","coroutine","checkForTrade","console","log","a","fetch","response","json","myJson","JSON","parse","stringify","logInUser","stringName","document","getElementById","value","student","hash","localStorage","setItem","admin","window","location","replace","getItem","clear","logOutUser","reload","username","body","children","item","getElementsByClassName","money","paintings","kudos","columns","label","minWidth","createData","name","tableWrapper","maxHeight","overflow","rows","StickyHeadTable","page","setPage","rowsPerPage","setRowsPerPage","Table","stickyHeader","TableHead","TableRow","map","column","TableCell","key","align","TableBody","slice","row","hover","role","tabIndex","variant","serverfuncs","InputBase","defaultValue","inputProps","TablePagination","rowsPerPageOptions","component","count","length","backIconButtonProps","nextIconButtonProps","onChangePage","newPage","onChangeRowsPerPage","target","tileData","img","MonaLisa","title","artist","description","Dance","Sunflowers","Main","fontFamily","textAlign","paddingTop","paddingBottom","Grid","container","direction","justify","alignItems","tile","src","alt","height","position","alignSelf","justifyContent","Component","MainPage","to","TablePage","ErrorPage","pathname","Login","type","Home","exact","path","hostname","match","ReactDOM","render","App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.91692597.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/menuIcon.d7a593e9.png\";","module.exports = __webpack_public_path__ + \"static/media/coin.515325b9.png\";","module.exports = __webpack_public_path__ + \"static/media/monalisa.c08cd151.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dance.94d13e19.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sunflowers.7ebd97b8.jpg\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport SimpleMenu from '../components/menu';\nimport Coin from '../static/coin.png';\n//import MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\n\nexport default function DenseAppBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      \n      <AppBar position=\"static\" >\n        <Toolbar variant=\"dense\">\n          <SimpleMenu />\n          <Typography variant=\"h6\" color=\"inherit\">\n            Fantasy Collecting\n          </Typography>\n            <img src={Coin} style={{marginLeft: 800}}/>\n            <Typography variant=\"subtitle1\" color=\"inherit\" style={{flexDirection: 'row', alignItems: 'center', justifyContent: 'flex-end'}}>\n              $1,000\n            </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Popper from '@material-ui/core/Popper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Fade from '@material-ui/core/Fade';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles(theme => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n\n}));\n\nexport default function SimplePopper(props) {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = event => {\n    setAnchorEl(anchorEl ? null : event.currentTarget);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popper' : undefined;\n\n  return (\n    <div>\n      <Button aria-describedby={id} onClick={handleClick}>\n        More Info\n      </Button>\n      <Popper id={id} open={open} anchorEl={anchorEl} transition>\n        {({ TransitionProps }) => (\n          <Fade {...TransitionProps} timeout={350}>\n            <Paper style={{width: 700}}>\n              <Typography className={classes.typography}>{props.text}</Typography>\n            </Paper>\n          </Fade>\n        )}\n      </Popper>\n    </div>\n  );\n}","/* eslint-disable require-jsdoc */\nexport {getArtworkInfo, putArtworkInfo, deleteArtworkInfo,\n  logInUser, logBackInUser, logOutUser, createUser, createArtPost, checkForTrade, updateUserData};\n\n// if (localStorage.getItem('username') === 'dholley') {\n//   logBackInUser();\n// }\n\nfunction coroutine(f) {\n  const o = f();\n  o.next();\n  return function(x) {\n    o.next(x);\n  };\n}\nlet tradeRequest = false;\nconst tradeCheck = coroutine(function* () {\n  while (true) {\n    yield;\n    checkForTrade();\n    if (tradeRequest) {\n      console.log('trade requested');\n    }\n  }\n});\n\n//setInterval(tradeCheck, 1000);\n\nasync function checkForTrade() {\n  const response = await fetch('http://localhost:9000/students/dholley');\n  const myJson = await response.json();\n  const student = JSON.parse(JSON.stringify(myJson))['0'];\n  if (typeof student !== 'undefined') {\n    tradeRequest = true;\n  } else {\n    console.log('no trade');\n  }\n}\n\n/*\n\n\n            USER MANAGEMENT FUNCS\n\n\n*/\n\nasync function logInUser() {\n  const stringName = document.getElementById('username').value;\n  const response = await fetch('http://localhost:9000/students/'+stringName);\n  const myJson = await response.json();\n  const student = JSON.parse(JSON.stringify(myJson))['0'];\n  if (typeof student === 'undefined') {\n    console.log('username does not exist');\n  }\n  else if(student.hash !== document.getElementById('password').value) {\n    console.log('incorrect password for username');\n  } else {\n    console.log('login successful');\n    localStorage.setItem('username', document.getElementById('username').value);\n    if(student.admin) {\n      window.location.replace('/table');\n    } else {\n      window.location.replace('/');\n    }\n  }\n}\n\nasync function logBackInUser() {\n  const stringName = localStorage.getItem('username');\n  const response = await fetch('http://localhost:9000/students/'+stringName);\n  const myJson = await response.json();\n  const student = JSON.parse(JSON.stringify(myJson))['0'];\n  if (typeof student === 'undefined') {\n    localStorage.clear();\n  } else {\n    console.log('login successful');\n    window.location.replace('/');\n  }\n}\n\nfunction logOutUser() {\n  localStorage.clear();\n  window.location.reload();\n}\n\n/*\n\n            ADMIN STUDENT MANAGEMENT FUNCS\n\n*/\n\n\nasync function updateUserData(username) {\n  // fetch('http://localhost:9000/users/'+row.username, {\n  //   method: 'put',\n  //   mode: 'cors',\n  //   headers: {\n  //       'Content-Type': 'application/json'\n  //   },\n  //   body: JSON.stringify(row)\n  // }).then(function (res) {\n  //   console.log(res);\n  // })\n  const body = JSON.stringify(\n        {username: document.getElementById(username+'name').children.item(0).getElementsByClassName('MuiInputBase-input')[0].value,\n        money: document.getElementById(username+'money').children.item(0).getElementsByClassName('MuiInputBase-input')[0].value,\n        paintings: document.getElementById(username+'paintings').children.item(0).getElementsByClassName('MuiInputBase-input')[0].value,\n        value: document.getElementById(username+'value').children.item(0).getElementsByClassName('MuiInputBase-input')[0].value,\n        kudos: document.getElementById(username+'kudos').children.item(0).getElementsByClassName('MuiInputBase-input')[0].value,});\n  console.log(body);\n}\n\nasync function createUser() {\n  const stringName = localStorage.getItem('username');\n  const response = await fetch('http://localhost:9000/students/'+stringName);\n  const myJson = await response.json();\n  const student = JSON.parse(JSON.stringify(myJson))['0'];\n  if (typeof student === 'undefined') {\n    fetch('http://localhost:9000/students/', {\n      method: 'post',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(\n          {username: document.getElementById('username').value,\n            hash: document.getElementById('password').value,\n            name: document.getElementById('name').value,\n            admin: document.getElementById('admin').checked,\n            guilders: parseInt(document.getElementById('guilders').value),\n            microresearchpoints: parseInt(\n                document.getElementById('micropoints').value),\n            paintings: document.getElementById('paintings').value,\n          }),\n    }).then(function(res) {\n      console.log(res);\n    })\n  } else {\n    console.log('user already exists');\n  }\n}\n\n\nfunction deleteUser() {\n  fetch('http://localhost:9000/students/dholley', {\n    method: 'delete',\n    mode: 'cors',\n  }).then(function(res) {\n    console.log(res);\n  })\n}\n\n/*\n\n            ADMIN ARTWORK MANAGEMENT FUNCS\n\n*/\n\nfunction createArtPost() {\n  fetch('http://localhost:9000/artworks/', {\n    method: 'post',\n    mode: 'cors',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(\n        {title: document.getElementById('title').value,\n          artist: document.getElementById('artist').value,\n          year: document.getElementById('year').value,\n          theoreticalprice: parseInt(\n              document.getElementById('theoretical').value),\n          actualprice: parseInt(document.getElementById('actual').value),\n          hidden: document.getElementById('hidden').checked,\n          owner: document.getElementById('owner').value,\n          url: document.getElementById('url').value,\n        }),\n  }).then(function(res) {\n    console.log(res);\n  })\n}\n\nfunction deleteArtworkInfo() {\n  fetch('http://localhost:9000/artworks/monalisa', {\n    method: 'delete',\n    mode: 'cors',\n  }).then(function(res) {\n    console.log(res);\n  })\n}\n\n/*\n\n            ARTWORK MANAGEMENT FUNCS\n\n*/\n\nasync function getArtworkInfo() {\n  const response = await fetch('http://localhost:9000/artworks/'+DocumentFragment.getElementById('artwork').value);\n  const myJson = await response.json();\n  console.log(JSON.stringify(myJson));\n  const artwork = JSON.parse(JSON.stringify(myJson))['0'];\n  if (typeof artwork !== 'undefined') {\n    console.log(artwork);\n    console.log('title: '+artwork['title']);\n    console.log('artist: '+artwork['artist']);\n    console.log('year: '+artwork['year']);\n    console.log('theoreticalprice: '+artwork['theoreticalprice']);\n    console.log('actualprice: '+artwork['actualprice']);\n    console.log('hidden: '+artwork['hidden']);\n    console.log('owner: '+artwork['owner']);\n    console.log('url: '+artwork['url']);\n  }\n  else {\n    console.log('artwork does not exist');\n  }\n}\n\nfunction putArtworkInfo() {\n    fetch('http://localhost:9000/artworks/monalisa', {\n        method: 'put',\n        mode: 'cors',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(\n            { title : 'Mona Lisa',\n                artist: 'leo',\n                year: 1500,\n                theoreticalprice: 100,\n                actualprice: 150,\n                hidden: true,\n                owner: 'dholley',\n                url: \"none\"   \n            })\n    }).then(function (res) {\n        console.log(res);\n    })\n}\n\nasync function makeTrade() {\n  const response = await fetch('http://localhost:9000/students/dholley');\n  const myJson = await response.json();\n  const student = JSON.parse(JSON.stringify(myJson))['0'];\n\n  student.guilders -= 0; //value entered to give \n  student.guilders += 0; //value entered to recieve\n\n  const artworks = [\"monalisa\", \"starrynight\"] ;\n\n  for (const artwork in artworks) {\n      fetch('http://localhost:9000/owners/'+artwork, {\n        method: 'put',\n        mode: 'cors',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: {\n          name: 'monalisa',\n          owner: 'dholley'\n        },\n      }).then(function(res) {\n        console.log(res);\n      })\n  }\n  fetch('http://localhost:9000/artworks/dholley', {\n    method: 'put',\n    mode: 'cors',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: student,\n  }).then(function(res) {\n    console.log(res);\n  })\n}\n\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\nimport InputBase from '@material-ui/core/InputBase';\nimport * as serverfuncs from '../serverfuncs';\n\nconst columns = [\n     { id: 'username', label: 'Username', minWidth: 170 },\n    { id: 'name', label: 'Name', minWidth: 170 },\n    { id: 'money', label: 'Money', minWidth: 100 },\n    { id: 'paintings', label: 'Paintings', minWidth: 100 },\n    { id: 'value', label: 'Value', minWidth: 100 },\n    { id: 'kudos', label: 'Kudos', minWidth: 100 },\n    { id: 'change', minWidth: 50 },\n  ];\n\nfunction createData(username, name, paintings, money, value, kudos) {\n    return { username, name, paintings, money, value, kudos };\n}\n\nconst useStyles = makeStyles({\n    root: {\n      width: '100%',\n    },\n    tableWrapper: {\n      maxHeight: 440,\n      overflow: 'auto',\n    },\n  });\n\nconst rows = [\n    createData('jopatrny', 'Julia Opatrny', '5', '9,000', '200', '50'),\n    createData('dholley', 'Donald Holley', '6', '4,000', '400', '85'),\n    createData('mjenkins', 'Matt Jenkins', '8', '1,500', '350', '35'),\n];\n\nexport default function StickyHeadTable() {\n    const classes = useStyles();\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  \n    const handleChangePage = (event, newPage) => {\n      setPage(newPage);\n    };\n  \n    const handleChangeRowsPerPage = event => {\n      setRowsPerPage(+event.target.value);\n      setPage(0);\n    };\n  \n    return (\n      <Paper className={classes.root}>\n        <div className={classes.tableWrapper}>\n          <Table stickyHeader>\n            <TableHead>\n              <TableRow>\n                {columns.map(column => (\n                  <TableCell\n                    key={column.id}\n                    align={column.align}\n                    style={{ minWidth: column.minWidth }}\n                  >\n                    {column.label}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n                return (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.username}>\n                    {columns.map(column => {\n                      const value = row[column.id];\n                      return (\n                        <TableCell id={row.username+column.id} align={column.align}>\n                            { (column.id == 'change') ? \n                            (<Button variant=\"contained\" onClick={() => serverfuncs.updateUserData(row.username)}>Save</Button>)\n                             : \n                            <InputBase\n                             defaultValue={value}\n                             inputProps={{\n                                 'aria-label': 'description',\n                                 }}\n                            />\n                            // <Input\n                            // defaultValue={value}\n                            // inputProps={{\n                            //   'aria-label': 'description',\n                            //   }}\n                            // />\n                          }\n                          {/* {column.format && typeof value === 'number' ? column.format(value) : value} */}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </div>\n        <TablePagination\n          rowsPerPageOptions={[10, 25, 100]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          backIconButtonProps={{\n            'aria-label': 'previous page',\n          }}\n          nextIconButtonProps={{\n            'aria-label': 'next page',\n          }}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n    );\n  }","import MonaLisa from '../static/monalisa.jpg';\nimport Dance from '../static/dance.jpg';\nimport Sunflowers from '../static/sunflowers.jpg';\n\nconst tileData = [\n    {\n      img: MonaLisa,\n      title: \"Mona Lisa\",\n      artist: 'DaVinci',\n      description: \"The Mona Lisa is a half-length portrait painting by the Italian Renaissance artist Leonardo da Vinci that has been described as the best known, the most visited, the most written about, the most sung about, the most parodied work of art in the world.\",\n    },\n    {\n      img: Dance,\n      title: \"Dance\",\n      artist: 'Matisse',\n      description: \"Dance is a painting made by Henri Matisse in 1910, at the request of Russian businessman and art collector Sergei Shchukin, who bequeathed the large decorative panel to the Hermitage Museum in Saint Petersburg, Russia.\",\n    },\n    {\n      img: Sunflowers,\n      title: \"Sunflowers\",\n      artist: 'Van Gogh',\n      description: \"Sunflowers is the name of two series of still life paintings by the Dutch painter Vincent van Gogh. The first series, executed in Paris in 1887, depicts the flowers lying on the ground, while the second set, executed a year later in Arles, shows a bouquet of sunflowers in a vase. \",\n    },\n  ];\n\nexport default tileData","import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport AppBar from './appbar';\nimport Typography from '@material-ui/core/typography';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport Paper from '@material-ui/core/Paper'; \nimport Popper from './popper';\nimport Table from './table';\nimport tileData from './tiledata';\n\n\n\nclass Main extends Component  {\n\n  constructor(props){\n    super(props);\n  }\n\n  render() {\n    return(\n      <div>\n        {/* <PinGrid /> */}\n        {/* <GridList /> */}\n        <Typography fontFamily=\"roboto\" variant=\"h4\" component=\"h4\" style={{ \n          textAlign: 'center',\n          paddingTop: 20,\n          paddingBottom: 10}}>My Gallery</Typography>\n        <div>\n          <Grid\n          container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"left-justified\"\n          >\n            {tileData.map(tile => (\n              <div style={{padding: 10}}>\n                \n                <img src={tile.img} alt={tile.title} height={500}/>\n                <Paper style={{ padding: 10 }}>\n                  <Typography variant=\"h6\" fontFamily=\"roboto\">{tile.title}</Typography>\n                  <Typography variant=\"subtitle1\" fontFamily=\"roboto\">By: {tile.artist}</Typography>\n                <div style={{paddingTop: 5, position: 'relative', alignSelf: 'right', justifyContent: 'flex-end'}}>\n                  <Popper text={tile.description} />\n                </div>\n                </Paper>\n                {/* <GridListTileBar\n                  title={tile.title}\n                  subtitle={<span>by: {tile.artist}</span>}\n                /> */}\n              </div>\n            ))}  \n              {/* <div style={{padding: 10}}><img src=\"./static/monalisa.jpg\" height={500}/>\n              </div>\n              <div style={{padding: 10}}><img src=\"./static/dance.jpg\" height={500} /></div>\n              <div style={{padding: 10}}><img src=\"./static/sunflowers.jpg\" height={500}/></div> */}\n          </Grid>\n        </div>\n      </div>\n      \n    )\n  }\n}\n\nexport default Main","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Homepage from \"../components/homepage\";\nimport Button from '@material-ui/core/Button';\nimport { Link } from \"react-router-dom\";\n\nconst MainPage = () => {\n        return(\n            <div>\n                <Link to=\"/table\">Table</Link><p></p>\n                <Link to=\"/login\">Log In</Link>\n                <Homepage />\n            </div>\n        )\n    \n}\n\nexport default MainPage","import React from \"react\";\nimport Table from \"../components/table\";\n\nconst TablePage = () => {\n        return(\n            <div>\n                <Table />\n            </div>\n        )\n    \n}\n\nexport default TablePage","import React from \"react\";\n\nconst ErrorPage = () => {\n        return(\n            <div>\n                <h2>Error 404 Page Not Found</h2>\n            </div>\n        )\n    \n}\n\nexport default ErrorPage","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n//import Login from \"../components/login\";\nimport Button from '@material-ui/core/Button';\nimport { Link } from \"react-router-dom\";\nimport * as serverfuncs from \"../serverfuncs\";\n\nconsole.log(window.location);\nif (localStorage.getItem('username') !== null && window.location.pathname == '/login') {\n    serverfuncs.logBackInUser();\n}\nconst Login = () => {\n        return(\n            <div>\n                <h1>Login</h1>\n                username:<input type = 'text' id = 'username'></input>\n                <p></p>password:<input type = 'text' id = 'password'></input>\n                <p></p><button onClick = {serverfuncs.logInUser}>log in</button>\n                <p></p><button onClick = {serverfuncs.logOutUser}>log out</button>\n            </div>\n        )\n    \n}\n\nexport default Login","import React, { Component } from 'react';\nimport Homepage from './components/homepage';\nimport AppBar from './components/appbar';\nimport * as serverfuncs from './serverfuncs';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\n\n//Pages\nimport MainPage from \"./pages/index\";\nimport Table from \"./pages/table\";\nimport ErrorPage from \"./pages/error\";\nimport Login from \"./pages/login\";\n\n\nclass Home extends Component  {\n\n  constructor(props){\n    super(props);\n  }\n\n  render() {\n    return(\n      <div>\n        {/*<div>\n        <p></p>username:<input type = 'text' id = 'username'></input>\n        <p></p>password:<input type = 'text' id = 'password'></input>\n        <p></p>name:<input type = 'text' id = 'name'></input>\n        <p></p>admin:<input type = 'checkbox' id = 'admin'></input>\n        <p></p>guilders:<input type = 'number' id = 'guilders'></input>\n        <p></p>micro:<input type = 'number' id = 'micropoints'></input>\n        <p></p>paintings:<input type = 'text' id = 'paintings'></input>\n        </div>\n        <button onClick = {serverfuncs.createUser}>CREATE ACCOUNT</button>\n        <button onClick = {serverfuncs.logInUser}>LOG IN</button>\n        <button onClick = {serverfuncs.logOutUser}>LOG OUT</button>\n        <p id = 'mytext'>NULL</p>\n        <div>\n          <button onClick = {serverfuncs.createArtPost}>CREATE ART POST</button>\n        </div>\n        <div>\n          <p></p>title:<input type = 'text' id = 'title'></input>\n          <p></p>artist:<input type = 'text' id = 'artist'></input>\n          <p></p>year:<input type = 'text' id = 'year'></input>\n          <p></p>theoretical:<input type = 'number' id = 'theoretical'></input>\n          <p></p>actual:<input type = 'number' id = 'actual'></input>\n          <p></p>hidden:<input type = 'checkbox' id = 'hidden'></input>\n          <p></p>owner:<input type = 'text' id = 'owner'></input>\n          <p></p>url:<input type = 'text' id = 'url'></input>\n        </div>*/}\n        {/* <AppBar />\n        {/* <PinGrid /> */}\n        {/* <GridList /> */}\n        <div>\n          <Router>\n            <Switch>\n              <Route exact path=\"/\"  component={MainPage} />\n              <Route exact path=\"/table\" component={Table} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/404notfound\" component={ErrorPage}/>\n              <Redirect to=\"/404notfound\"/>\n            </Switch>\n          </Router>\n        </div>\n      </div>\n      \n    )\n  }\n}\n\nexport default Home","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}